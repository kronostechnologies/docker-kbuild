#!/bin/bash
# Build script
set -e -u

_npm () {
  if [ -f package.json ];
  then
    if [ -f yarn.lock ];
    then
      if [ ! -x $(command -v yarn) ];
      then
        npm install -g yarn
      fi
      yarn install
    else
      npm install
    fi
  fi
}

_bower () {
  if [ -f bower.json ];
  then
    if [ ! -x $(command -v bower) ];
    then
      npm install -g bower
    fi

    if [ "$1" == 'dev' ];
    then
      bower --config.interactive=false prune
    fi
    bower --config.interactive=false update
  fi
}

_grunt () {
  if [ -f Gruntfile.js ];
  then
    if [ ! -x $(command -v grunt) ];
    then
      npm install -g grunt-cli
    fi

    if [ "$1" == 'dev' ];
    then
      grunt build-dev
    elif [ "$1" == 'release' ];
    then
      grunt build
    fi
  fi
}

_composer () {
  if [ -f composer.json ];
  then
    if [ "$1" == 'dev' ];
    then
      if [ -f composer.lock ] && grep -qq composer\\.lock .gitignore
      then
        composer update -n --prefer-dist --ignore-platform-reqs
      fi
      composer install -n --prefer-dist --ignore-platform-reqs
    elif [ "$1" == 'release' ];
    then
      composer install -n --no-dev -o --prefer-dist --ignore-platform-reqs
    fi
  fi
}

_clean () {

  if [ -f package.json ];
  then
    find . -type d -name 'node_modules' -exec rm -rf "{}" \; 2>/dev/null || true
  fi

  if [ -f bower.json ];
  then
    find . -type d -name 'bower_components' -exec rm -rf "{}" \; 2>/dev/null || true
  fi

  if [ -d .sass-cache ];
  then
    rm -rf .sass-cache/ 2>/dev/null || true
  fi

}

if [[ $# != 0 && "$1" == '--dev' ]]
then
  _npm dev
  _bower dev
  _grunt dev
  _composer dev
elif [[ $# != 0 && "$1" == '--release' ]]
then
  _npm release
  _bower release
  _grunt release
  _composer release
  _clean
else
  echo "Usage: $0 --dev | --release"
  exit 1
fi
